
package ui.custom;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import ui.main.MainUI;


public class ItemUI extends javax.swing.JPanel {

    private JTable orderTable;
    private Color borderColor;
    private String foodType;
    private String foodName;
    private float price;
    private int qty;
    
    
    public ItemUI(String foodType, String name, float price, JTable orderTable) {
        initComponents();
        
        this.setPreferredSize(new Dimension(433, 76));
        
        //initialize variables
        this.foodType = foodType;
        this.foodName = name;
        this.price = price;
        this.qty = 1;
        
        //set values to JLabels
        foodNameTxt.setText(this.foodName);
        priceTxt.setText(String.format("%.2f", this.price));
        
        setBorderColor(this.foodType);
        
        //kuhaon ang reference sa order table
        this.orderTable = orderTable;
        
        //adds a mouse listener to the ItemUI
        addMouseListener(new MouseAdapter() {
            //kung click ang itemUI, mag add ug row sa orderTable
            @Override
            public void mouseClicked(MouseEvent e) {
                DefaultTableModel tableModel = (DefaultTableModel) orderTable.getModel();
                boolean itemFound = false;
                
                //i check sa if naa bay row sa table
                if(tableModel.getRowCount() > 0) {
                    //gamiton nato ang for loop para ma isa-isa natog access ang unod sa orderTabel
                    for(int i=0; i<tableModel.getRowCount(); i++) {
                        //i check sa nato ug naa ba ang giclick nato na item
                        itemFound = foodName.equals(tableModel.getValueAt(i, 1).toString());

                        //kung nag exist and item, dungagan lang nato ang quantity niya
                        if(itemFound) {
                            qty++;
                            tableModel.setValueAt(qty, i, 3);
                            break;
                        }  
                    }
                    
                    //ug wala nag exist, mag create ta ug new row sa table
                    if(!itemFound) {
                        Object[] newRow = new Object[4];
                        newRow[0] = foodType;
                        newRow[1] = foodName;
                        newRow[2] = price;
                        newRow[3] = qty;
                        tableModel.addRow(newRow);
                    }
                }
                else {
                    //kung walay row, edi mag add ta dretcho ug new row sa table
                    Object[] newRow = new Object[4];
                    newRow[0] = foodType;
                    newRow[1] = foodName;
                    newRow[2] = price;
                    newRow[3] = qty;
                    tableModel.addRow(newRow);
                }
                
            }
       
            @Override 
            public void mouseEntered(MouseEvent e) {
                setBackground(new Color(66,66,66));
            }
            
            @Override 
            public void mouseExited(MouseEvent e) {
                setBackground(new Color(33,33,33));
            }
        });
    }
    
    private void setBorderColor(String foodType) {
        switch(foodType) {
            case "Breakfast":
                borderColor = Color.decode("#ffd43b");
                break;
            case "Lunch":
                borderColor = Color.decode("#ff9430");
                break;
            case "Dinner":
                borderColor = Color.decode("#7b3dff");
                break;
            case "Dessert":
                borderColor = Color.decode("#ecadff");
                break;
            case "Drink":
                borderColor = Color.decode("#24e3ed");
                break;
        }
        
        Border newBorder = BorderFactory.createLineBorder(borderColor, 3);
        this.setBorder(newBorder);
    }
    
    public String getFoodName() {
        return foodNameTxt.getText();
    }
    
    public String getFoodType() {
        return foodType;
    }
    
    public int getQty() {
        return qty;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        foodNameTxt = new javax.swing.JLabel();
        priceTxt = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(33, 33, 33));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51), 3));

        foodNameTxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        foodNameTxt.setForeground(new java.awt.Color(255, 255, 255));
        foodNameTxt.setText("Food Name");

        priceTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        priceTxt.setForeground(new java.awt.Color(255, 255, 255));
        priceTxt.setText("99999.99");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("â‚±");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foodNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(foodNameTxt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceTxt)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel foodNameTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel priceTxt;
    // End of variables declaration//GEN-END:variables
}
